.ember-container { /* For Ember JS Blocks */
    border: 1px solid var(--SmartThemeBorderColor);
    border-radius: 10px;
    padding: 10px;
    background-color: var(--background-color-hightlight);
    margin: 10px 0;
    min-height: 50px;
    resize: vertical;
    overflow: auto;
}

.ember-loading-container { /* For Ember JS Blocks & HTML Loading */
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100px; /* Default for JS blocks */
    padding: 20px;
    border: 1px dashed var(--SmartThemeBorderColor);
    border-radius: 10px;
    margin: 10px 0;
    color: var(--text-color);
    opacity: 0.8;
}

.ember-loading-container .fa-spinner {
    margin-right: 10px;
    font-size: 1.2em;
}

.ember-iframe { /* For Ember JS Blocks */
    width: 100%;
    height: 100%;
    border: none;
    border-radius: 10px;
}

/* Styles for the Generic HTML Iframe */
.ember-generic-html-iframe {
    width: 100%;
    border: none;
    display: block;
}

/* Style for the Ember JS heal button */
.ember-heal-button.fa-spin {
    color: var(--primary-color) !important; /* Make it clearly active while spinning */
}

/* Style for the manual "Run HTML" button */
.ember-run-html-button { /* Uses mes_button base styles */
    opacity: 0.7;
}
.ember-run-html-button:hover {
    opacity: 1;
    color: var(--primary-color);
}

/* Styles from Clickable Inputs, ensuring they don't override Ember's specific buttons */
/* Apply data-title style only to buttons that are NOT Ember control buttons */
.mes_text button[data-title]:not(.ember-heal-button):not(.ember-run-html-button):not(.mes_button) {
	/* Hide the original button text visually if data-title is used */
	font-size: 0 !important; /* Use important if necessary to override general button styles */
	line-height: 0 !important;
	padding: 0 !important; /* Adjust padding if needed */
	display: inline-block; /* Ensure it behaves like a button */
	min-width: auto; /* Allow width based on content */
	min-height: auto; /* Allow height based on content */
	height: auto; /* Allow height based on content */
	vertical-align: middle; /* Align nicely in text flow */
}

/* Use ::after to display the data-title content */
.mes_text button[data-title]:not(.ember-heal-button):not(.ember-run-html-button):not(.mes_button)::after {
	font-size: var(--mainFontSize); /* Restore font size */
	line-height: var(--mainLineHeight); /* Restore line height */
	content: attr(data-title); /* Display the attribute value */
	padding: var(--button-padding); /* Add padding back using a variable if available, or a fixed value */
	display: block; /* Make the pseudo-element block to contain the padding/content */
}


/* General settings rows for consistency */
#ember-settings-content .setting-row {
    display: flex;
    flex-direction: column;
    gap: 8px;
    margin-bottom: 15px;
}
#ember-settings-content .checkbox_label {
    display: flex;
    align-items: center;
    gap: 8px;
}
#ember-settings-content .description {
    font-size: 0.9em;
    opacity: 0.8;
    margin-top: 4px;
    margin-bottom: 5px;
}
#ember-settings-content hr {
    margin-top: 20px;
    margin-bottom: 20px;
}
#ember-settings-content .flex-container.justifyspacebetween {
    justify-content: space-between;
}
#ember-settings-content .flex-container.alignitemscenter {
    align-items: center;
}
#ember-settings-content .menu_button.flex1.margin0 {
    flex: 1;
    margin: 0 0 0 10px;
    max-width: 180px; /* Increased max-width slightly for the new button text */
    text-align: center; /* Center text inside the button */
    justify-content: center; /* Center content if using flex */
}
/* Style for disabled settings elements */
#ember-settings-content .setting-row input:disabled + label.checkbox_label,
#ember-settings-content .setting-row label[for][disabled] {
    opacity: 0.5;
    cursor: not-allowed;
}
#ember-settings-content .setting-row input[type="checkbox"]:disabled {
     cursor: not-allowed;
}